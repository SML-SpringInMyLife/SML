//커뮤니티 게시판
DROP TABLE COMMUNITY;
CREATE TABLE COMMUNITY (
    COMM_CODE NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1) PRIMARY KEY NOT NULL,
    COMM_TITLE VARCHAR2(30) NOT NULL,
    COMM_WRITER VARCHAR2(30),
    COMM_CONTENT CLOB,
    COMM_ENROLL_DATE DATE DEFAULT SYSDATE NOT NULL,
    COMM_MODIFY_DATE DATE DEFAULT NULL,
    COMM_POINT NUMBER DEFAULT 0 NOT NULL,
    COMM_SECRET VARCHAR2(1) DEFAULT 'N' NOT NULL,
    COMM_PASSWORD NUMBER(4),
    COMM_COUNT NUMBER DEFAULT 0,
    COMM_STATUS VARCHAR2(1) DEFAULT 'N' NOT NULL,
    MEM_CODE NUMBER NOT NULL,
    FOREIGN KEY (MEM_CODE) REFERENCES TB_MEMBER (MEM_CODE)
);
SELECT * FROM COMMUNITY WHERE COMM_CODE = 24 ORDER BY COMM_ENROLL_DATE DESC;

//커뮤니티 댓글
DROP TABLE COMMUNITY_REPLY;
--CREATE TABLE COMMUNITY_REPLY (
--    REP_CODE NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1) PRIMARY KEY NOT NULL,
--    MEM_CODE NUMBER NOT NULL,
--    REP_CONTENT VARCHAR2(255),
--    RER_TARGET_CODE VARCHAR2(100),
--    REP_REF_GROUP NUMBER, -- 댓글 그룹 번호
--    REP_GROUP NUMBER, -- 원 글에 달린 댓글 내에서의 그룹 번호
--    REP_STATUS CHAR(1) DEFAULT 'N' NOT NULL,
--    REP_ENROLL_DATE DATE DEFAULT SYSDATE NOT NULL,
--    REP_MODIFY_DATE DATE DEFAULT NULL,
--    COMM_CODE NUMBER,
--    FOREIGN KEY (COMM_CODE) REFERENCES COMMUNITY (COMM_CODE),
--    FOREIGN KEY (MEM_CODE) REFERENCES TB_MEMBER (MEM_CODE)
--);
CREATE TABLE COMMUNITY_REPLY(
    REP_CODE NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    COMM_CODE NUMBER NOT NULL,
    REP_PARENT_CODE NUMBER DEFAULT NULL,  -- 대댓글의 경우 상위 댓글의 ID
    REP_WRITER NUMBER NOT NULL, 
    REP_CONTENT VARCHAR(500) NOT NULL,
    REP_ENROLL_DATE DATE DEFAULT SYSDATE NOT NULL,
    REP_MODIFY_DATE DATE DEFAULT NULL,
    FOREIGN KEY (COMM_CODE) REFERENCES COMMUNITY(COMM_CODE),
    FOREIGN KEY (REP_WRITER) REFERENCES TB_MEMBER(MEM_CODE),
    FOREIGN KEY (REP_PARENT_CODE) REFERENCES COMMUNITY_REPLY(REP_CODE) ON DELETE CASCADE
);
CREATE SEQUENCE COMMUNITY_REPLY_SEQ;
SELECT * FROM COMMUNITY_REPLY;

//커뮤니티 좋아요
DROP TABLE COMMUNITY_LIKE;
CREATE TABLE COMMUNITY_LIKE (
    LIKE_CODE NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    MEM_CODE NUMBER NOT NULL,
    COMM_CODE NUMBER NOT NULL,
    FOREIGN KEY (MEM_CODE) REFERENCES TB_MEMBER (MEM_CODE) ON DELETE CASCADE,
    FOREIGN KEY (COMM_CODE) REFERENCES COMMUNITY (COMM_CODE) ON DELETE CASCADE
);

COMMIT;

